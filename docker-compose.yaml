services:
  postgres:
    image: postgres:15-alpine
    container_name: suricata-postgres
    environment:
      POSTGRES_DB: suricata_alerts
      POSTGRES_USER: suricata_user
      POSTGRES_PASSWORD: suricata_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U suricata_user -d suricata_alerts"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - suricata-network

  suricata:
    image: jasonish/suricata:latest
    container_name: suricata-ids
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    environment:
      - SURICATA_OPTIONS=-i wlp1s0
    volumes:
      - ./suricata/suricata.yaml:/etc/suricata/suricata.yaml
      - suricata_logs:/var/log/suricata
    restart: unless-stopped
    network_mode: host

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:8000/api/v1
    container_name: suricata-backend
    environment:
      DATABASE_URL: postgresql://suricata_user:suricata_password@postgres:5432/suricata_alerts
      SURICATA_EVE_PATH: /var/log/suricata/eve.json
      SURICATA_POLL_INTERVAL: 5
      EPSS_API_URL: https://api.first.org/data/v1/epss
      EPSS_USE_OFFLINE: "false"
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_TLS: "true"
      SMTP_USER: alerts@example.com
      SMTP_PASSWORD: your-smtp-password
      EMAILS_FROM_EMAIL: alerts@example.com
      EMAILS_TO_EMAIL: security@example.com
      LOG_LEVEL: INFO
    volumes:
      - suricata_logs:/var/log/suricata:ro
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      suricata:
        condition: service_started
    restart: unless-stopped
    networks:
      - suricata-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:8000/api/v1
    container_name: suricata-frontend
    ports:
      - "80:3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - suricata-network

volumes:
  suricata_logs:
    driver: local

networks:
  suricata-network:
    driver: bridge